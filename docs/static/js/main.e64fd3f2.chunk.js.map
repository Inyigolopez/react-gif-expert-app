{"version":3,"sources":["componets/AddCategory.js","componets/GifGridItem.js","helpers/getGifs.js","componets/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","console","log","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGVC,mBAAS,IAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KAmB9C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCPlBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAGrC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAMF,EAAMG,IAAKJ,IACtB,2BAAKA,K,uBCNJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEmCO,UAAUF,GAF7C,+DAIAG,MAAMR,GAJN,cAIbS,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAG1CiB,QAAQC,IAAIN,GAdO,kBAeZA,GAfY,4CAAH,sDCIPO,EAAU,SAAC,GAAgB,IAAfd,EAAc,EAAdA,SAAc,ECHX,SAAEA,GAAe,IAAD,EAEdrB,mBAAS,CAC/B2B,KAAM,GACNS,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAbAC,qBAAW,WAEPnB,EAAQC,GAAUmB,MAAM,SAAAC,GAEpBH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAIlB,CAACf,IAGGgB,EDd0BK,CAAarB,GAAjCU,EAHsB,EAG3BJ,KAAaS,EAHc,EAGdA,QASrB,OAPAH,QAAQC,IAAIE,GAQR,oCACI,wBAAInB,UAAU,qCAAsCI,GAElDe,GAAW,uBAAGnB,UAAU,oCAAb,WAEd,yBAAKA,UAAU,aAENc,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIa,IAAMb,EAAIhB,IACLgB,UEzBpBc,EAAe,WAAM,MAGM5C,mBAAS,CAAC,cAHhB,mBAGvB6C,EAHuB,KAGX9C,EAHW,KAY9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BAGA,4BAEQ8C,EAAWhB,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACIsB,IAAMtB,EACNA,SAAUA,U,MCvBtCyB,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e64fd3f2.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n    \n    \n    const [inputValue, setInputValue] = useState('')\n    \n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        if(inputValue.trim().length > 2){\n            setCategories( cats => [ inputValue, ...cats ]);\n            setInputValue('');\n        }\n        \n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue } \n                onChange={ handleInputChange }          \n            />\n\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n \n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={title} />\n            <p>{ title }</p>        \n        </div>\n    )\n}\n","\n\nexport const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=mk2Ve6U5AmwxGEpFoWslk1dPVSV8dmOt`;\n\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    \n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    console.log(gifs);\n    return gifs;\n} "," import React, { useState, useEffect } from 'react'\nimport { GifGridItem } from './GifGridItem';\n// import { getGifs } from '../helpers/getGifs';\n\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\n\nexport const GifGrid = ({category}) => {\n\n    // const [images, setImages] = useState([]);\n    const { data:images, loading } = useFetchGifs(category);\n\n    console.log(loading);\n\n    // useEffect( () => {\n    //     getGifs(category).then( setImages );\n    // }, [category] ) \n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3> \n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n           <div className=\"card-grid\">\n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n                \n            </div>\n        </>\n    )\n}\n","import {useState, useEffect} from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true,\n    })\n\n    useEffect( () => {\n\n        getGifs(category).then( imgs => {\n            \n            setstate({\n                data: imgs,\n                loading: false\n            })\n        });\n    \n    }, [category] ) \n\n\n    return state;\n\n}","import React, {useState} from 'react'\nimport { AddCategory } from './componets/AddCategory';\nimport { GifGrid } from './componets/GifGrid';\n\nexport const GifExpertApp = () => {\n    \n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n    const [categories, setCategories] = useState(['One Punch']);\n\n    // const handleAdd = () => {\n    //     // setCategories([...categories, 'HunterXHunter']);\n    //     setCategories( cats => [...cats, 'HunterXHunter']);\n\n    // }\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            \n            <hr />  \n\n            \n            <ol>\n                { \n                    categories.map( category => \n                        <GifGrid\n                            key={ category } \n                            category={category}\n                        />\n                    )\n                }\n            </ol>\n  \n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// GifExpertApp\n"],"sourceRoot":""}